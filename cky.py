from typing import Any
from cfg import CFG

class CKY:
	def __init__(self, grammar: CFG) -> None:
		"""
		Initializes the CKY parser with a given Context-Free Grammar (CFG).

		Parameters
		----------
		grammar (CFG): The Context-Free Grammar to use for parsing.
		"""
		self.grammar: CFG = grammar

	def __call__(self, *args: Any, **kwargs: Any) -> bool:
		"""
		Allows the CKY parser to be called as a function.

		Parameters
		----------
		*args (Any): Positional arguments to pass to the parse method.
		**kwargs (Any): Keyword arguments to pass to the parse method.

		Returns
		-------
		bool
			The result of the parse method call.
		"""
		return self.parse(*args, **kwargs)

	def set_grammar(self, grammar: CFG) -> None:
		"""
		Sets the grammar to use for parsing.

		Parameters
		----------
		grammar (CFG): The grammar object to use for parsing.
		"""
		self.grammar = grammar

	def parse(self, word: str, grammar: CFG|None=None) -> bool:
		"""
		Parses a given word using the CKY algorithm.

		Parameters
		----------
		word (str): The word to parse.
		grammar (CFG): The grammar to use for parsing. If None, the grammar
			previously set is used.

		Returns
		-------
		bool
			True if the word is in the language generated by the grammar, False
			otherwise.
		"""
		if grammar is None:
			grammar = self.grammar

		pass

		
