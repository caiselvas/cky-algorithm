CFG(
	A -> BS | DC | EC | a | 系
	B -> a
	C -> b
	D -> BS | a
	E -> DC
	S -> BS | DC | EC | a
)

* Start Symbol: A
* Terminal Symbols: {a, b, 系}
* Non-Terminal Symbols: {A, B, C, D, E, S}

##################################################

系 -> True
TREE -> [('A', '系')]

a -> True
TREE -> [('A', 'a')]

ab -> True
TREE -> [('A', ('D', 'a'), ('C', 'b'))]

abb -> True
TREE -> [('A', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b'))]

aab -> True
TREE -> [('A', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('A', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b'))]

aabb -> True
TREE -> [('A', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b'))), ('A', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b')), ('C', 'b'))]

aaabbb -> True
TREE -> [('A', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b')), ('C', 'b'))), ('A', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b'))), ('C', 'b'))), ('A', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b')))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b')), ('C', 'b'))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b'))), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b')))), ('C', 'b')), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b'))), ('C', 'b')), ('C', 'b'))]

aaaabb -> True
TREE -> [('A', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b'))))), ('A', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b')), ('C', 'b')))), ('A', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b')))), ('A', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', 'a'))), ('C', 'b')), ('C', 'b'))), ('A', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b')))), ('C', 'b'))), ('A', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b'))), ('C', 'b'))), ('A', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b')))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', 'a'))), ('C', 'b'))), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', 'a')))), ('C', 'b')), ('C', 'b'))]

aaaaab -> True
TREE -> [('A', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b')))))), ('A', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b'))))), ('A', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', 'a'))), ('C', 'b')))), ('A', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', 'a')))), ('C', 'b'))), ('A', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', 'a'))))), ('C', 'b'))]

aaaabbbb -> True
TREE -> [('A', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b'))), ('C', 'b')), ('C', 'b')))), ('A', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b')))), ('C', 'b')), ('C', 'b'))), ('A', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b')), ('C', 'b'))), ('C', 'b')), ('C', 'b'))), ('A', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b'))), ('C', 'b')), ('C', 'b'))), ('A', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b')), ('C', 'b'))), ('C', 'b'))), ('A', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b'))), ('C', 'b'))), ('C', 'b'))), ('A', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b')), ('C', 'b')))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b'))), ('C', 'b')))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b')))), ('C', 'b')), ('C', 'b'))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b'))), ('C', 'b')), ('C', 'b'))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b')))), ('C', 'b'))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b')), ('C', 'b'))), ('C', 'b'))), ('C', 'b')), ('A', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b'))), ('C', 'b'))), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', 'a'), ('C', 'b')), ('C', 'b'))))), ('C', 'b')), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b')), ('C', 'b')))), ('C', 'b')), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b'))), ('C', 'b')))), ('C', 'b')), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('E', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', 'a'))), ('C', 'b')), ('C', 'b'))), ('C', 'b')), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('B', 'a'), ('S', ('D', 'a'), ('C', 'b')))), ('C', 'b'))), ('C', 'b')), ('C', 'b')), ('A', ('E', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', ('D', ('B', 'a'), ('S', 'a')), ('C', 'b'))), ('C', 'b'))), ('C', 'b')), ('C', 'b'))]

b -> False

bb -> False

aaabbbbbbbb -> False

abbb -> False

aabbbbb -> False

aaaaabbbbbbbbbbbbb -> False

aabbbbbbbbbbbb -> False

abababbbbbbbbb -> False

aaabbabbbbbbbb -> False

aabbbbbbb -> False

